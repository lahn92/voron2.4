===== Config file =====
[gcode_macro PARK]
gcode = 
	status_busy
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro CG28]
gcode = 
	status_homing
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro CQGL]
gcode = 
	{% if printer.quad_gantry_level.applied == False %}
	status_calibrating_z
	{% if "xyz" not in printer.toolhead.homed_axes %}
	status_homing
	G28
	{% endif %}
	QUAD_GANTRY_LEVEL
	{% endif %}

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	CG28
	CQGL
	G28 Z
	status_meshing
	BED_MESH_CALIBRATE ADAPTIVE=1
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	{% set target_bed = params.BED|int %}
	{% set target_extruder = params.EXTRUDER|int %}
	{% set target_chamber = params.CHAMBER|default("35")|int %}
	SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={target_chamber}
	status_heating
	M190 S{target_bed}
	M109 S{target_extruder}
	G32
	G90
	G1 Z20 F3000
	status_printing
	LINE_PURGE
	SFS_ENABLE

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	SFS_DISABLE
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{2 * th.axis_maximum.x//3} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	status_part_ready
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
description = Pause the actual running print

[gcode_macro RESUME]
rename_existing = RESUME_BASE
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}
description = Resume the actual running print
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False

[gcode_macro CANCEL_PRINT]
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE
description = Cancel the actual running print

[gcode_macro M600]
gcode = 
	
	PAUSE

[mcu EBBCan]
canbus_uuid = 5f35f76b28ae

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = EBBCan:gpio18
dir_pin = EBBCan:gpio19
enable_pin = !EBBCan:gpio17
microsteps = 32
rotation_distance = 21.9985825
gear_ratio = 50:10
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = EBBCan:gpio7
control = pid
pid_kp = 26.385
pid_ki = 3.383
pid_kd = 51.450
min_temp = -100
max_temp = 285
max_extrude_cross_section = 5
sensor_type = MAX31865
sensor_pin = EBBCan:gpio9
spi_software_sclk_pin = EBBCan:gpio10
spi_software_mosi_pin = EBBCan:gpio8
spi_software_miso_pin = EBBCan:gpio11
rtd_nominal_r = 1000
rtd_reference_r = 4300
rtd_num_of_wires = 2
rtd_use_50hz_filter = True

[tmc2209 extruder]
uart_pin = EBBCan:gpio20
run_current = 0.3
stealthchop_threshold = 999999

[fan]
pin = EBBCan:gpio13

[heater_fan hotend_fan]
pin = EBBCan:gpio14
heater = extruder
heater_temp = 50.0

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[neopixel UnderLighting]
pin = PB0
chain_count = 75
initial_red = 1.0
initial_green = 0.0
initial_blue = 0.0
color_order = GRB

[neopixel sb_leds]
pin = EBBCan:gpio16
chain_count = 10
color_order = GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW,  GRBW
initial_red = 1.0
initial_green = 0.0
initial_blue = 1.0
initial_white = 0.0

[led_effect sb_logo_busy]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1,0,0)

[led_effect sb_logo_cleaning]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.02, 0.5)

[led_effect sb_logo_calibrating_z]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.0, 0.35)

[led_effect sb_logo_heating]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (1, 0.18, 0)

[led_effect sb_logo_cooling]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
	neopixel:UnderLighting
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (0, 0, 1)

[led_effect sb_logo_homing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.6, 0.2)

[led_effect sb_logo_leveling]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.5, 0.1, 0.4)

[led_effect sb_logo_meshing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.2, 1.0, 0.0)

[led_effect sb_logo_printing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)

[led_effect sb_logo_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.01, 0.01, 0.01)

[led_effect sb_logo_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 1.0, 0.0)

[led_effect sb_nozzle_heating]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1.0, 0.18, 0.0, 0.0)

[led_effect sb_nozzle_cooling]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.0, 0.0, 1.0, 0.1)

[led_effect sb_nozzle_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 0.0, 0.0, 0.0)

[led_effect sb_nozzle_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 1.0, 0.0, 0.1)

[led_effect sb_critical_error]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
layers = 
	strobe         1  1.5   add        (1.0,  1.0, 1.0)
	breathing      2  0     difference (0.95, 0.0, 0.0)
	static         1  0     top        (1.0,  0.0, 0.0)
autostart = false
frame_rate = 24
run_on_error = true

[led_effect rainbow]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
autostart = true
frame_rate = 24
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.0, 0.3, 0.0),(0.0, 0.0, 0.3)

[led_effect set_nozzle_leds]
leds = 
	neopixel:sb_leds (9,10)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (0.0,  0.0, 0.0, 1.0)

[led_effect set_logo_leds]
leds = 
	neopixel:sb_leds (1,2,3,4,5,6,7,8)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (1.0,  1.0, 1.0)

[gcode_macro set_logo_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds STOP=1

[gcode_macro set_logo_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds

[gcode_macro set_nozzle_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds

[gcode_macro set_nozzle_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds STOP=1

[gcode_macro status_off]
gcode = 
	STOP_LED_EFFECTS

[gcode_macro status_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=rainbow

[gcode_macro status_part_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_nozzle_part_ready
	SET_LED_EFFECT EFFECT=sb_logo_part_ready

[gcode_macro status_busy]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_busy
	set_nozzle_leds_on

[gcode_macro status_heating]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_heating
	SET_LED_EFFECT EFFECT=sb_nozzle_heating

[gcode_macro status_cooling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cooling
	SET_LED_EFFECT EFFECT=sb_nozzle_cooling

[gcode_macro status_leveling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_leveling
	set_nozzle_leds_on

[gcode_macro status_homing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_homing
	set_nozzle_leds_on

[gcode_macro status_changeFilament]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_critical_error
	set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cleaning
	set_nozzle_leds_on

[gcode_macro status_meshing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_meshing
	set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_calibrating_z
	set_nozzle_leds_on

[gcode_macro status_printing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_printing
	set_nozzle_leds_on

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.4
variable_purge_amount = 40
variable_line_length = 75
variable_flow_rate = 12
variable_x_default = 10
variable_y_default = 10
variable_distance_to_object_y = 5
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
	{ action_respond_info("z_height        : %f" % (z_height))  }
	{ action_respond_info("purge_amount    : %f" % (purge_amount))  }
	{ action_respond_info("line_length     : %f" % (line_length))  }
	{ action_respond_info("flow_rate       : %f" % (flow_rate))  }
	{ action_respond_info("x_default       : %f" % (x_default))  }
	{ action_respond_info("y_default       : %f" % (y_default))  }
	{ action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
	{% endif %}
	
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
	{% set cross_section = nozzle_dia * z_height | float %}
	{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{x_origin} Y{y_origin - distance_to_object_y}
	G0 Z{z_height}
	M83
	G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}
	G1 E-.5 F2100
	G92 E0
	M82
	G0 Z{z_height * 2} F{travel_speed}

[gcode_macro SETUP_LINE_PURGE]
gcode = 
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

[exclude_object]

[gcode_arcs]
resolution = 0.1

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 4000
max_accel_to_decel = 4000
max_z_velocity = 20
max_z_accel = 350
square_corner_velocity = 5.0

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 50.0
shaper_type_y = mzv
shaper_freq_y = 37.8

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.75
min_temp = -200
max_temp = 120
control = pid
pid_kp = 44.597
pid_ki = 2.065
pid_kd = 240.826

[stepper_x]
step_pin = PF13
dir_pin = PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3
position_endstop = 1.456

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = !PC1
enable_pin = !PA0
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = !PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 122,350
speed = 500
z_hop = 10

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 500
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[probe]
pin = EBBCan:gpio6
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 7.5
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.01
samples_tolerance_retries = 5

[temperature_fan chamber]
pin = PD12
max_power = 0.65
shutdown_speed = 0.0
kick_start_time = 5.0
cycle_time = 0.01
off_below = 0.1
sensor_type = ATC Semitec 104GT-2
sensor_pin = PF4
min_temp = 0
max_temp = 70
target_temp = 35.0
control = watermark
gcode_id = C

[controller_fan controller_fan_0]
pin = PD13
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[controller_fan controller_fan_1]
pin = PD14
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[filament_motion_sensor SFS_T0]
detection_length = 14.00
extruder = extruder
switch_pin = ^PG12
pause_on_runout = True
event_delay = 3.0
pause_delay = 0.5
runout_gcode = 
	M117 Runout Detected!

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[gcode_macro SFS_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1

[gcode_macro SFS_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[output_pin caselight]
pin = PB10
pwm = true
shutdown_value = 0
value = 1
cycle_time = 0.01

[bed_mesh]
speed = 300
horizontal_move_z = 10
mesh_min = 40, 40
mesh_max = 310,310
fade_start = 0.6
fade_end = 10.0
probe_count = 7,7
adaptive_margin = 5
algorithm = bicubic
zero_reference_position = 175,175

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[display]
lcd_type = uc1701
cs_pin = EXP1_3
a0_pin = EXP1_4
rst_pin = EXP1_5
encoder_pins = ^EXP2_5, ^EXP2_3
click_pin = ^!EXP1_2
contrast = 63
spi_software_miso_pin = EXP2_1
spi_software_mosi_pin = EXP2_6
spi_software_sclk_pin = EXP2_2

[neopixel btt_mini12864]
pin = EXP1_6
chain_count = 3
initial_red = 0.0
initial_green = 0.0
initial_blue = 1.0
color_order = RGB

[bed_mesh default]
version = 1
points = 
	-0.027500, -0.022500, -0.021250, -0.025000
	-0.013750, -0.005000, -0.002500, -0.022500
	-0.008750, 0.013750, 0.023750, -0.011250
	-0.008750, -0.005000, -0.007500, -0.015000
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 112.02
max_x = 237.97
min_y = 112.84
max_y = 237.16
=======================
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-I', '/home/pi/printer_data/comms/klippy.serial', '-l', '/home/pi/printer_data/logs/klippy.log', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-261-g248d3dbf-dirty'
Untracked files: klippy/extras/led_effect.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, May  2 2024, 11:59:08) [GCC 12.2.0]'
webhooks client 140734510210448: {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
=============== Log rollover at Wed Jul 10 10:52:00 2024 ===============
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 793, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 183, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/pi/klipper/klippy/mcu.py", line 798, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
mcu 'mcu': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

No build file /home/pi/klipper/klippy/../.config
No build file /home/pi/klipper/klippy/../out/klipper.dict
No build file /home/pi/klipper/klippy/../out/klipper.elf
webhooks client 140734510210448: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-I', '/home/pi/printer_data/comms/klippy.serial', '-l', '/home/pi/printer_data/logs/klippy.log', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-261-g248d3dbf-dirty'
Untracked files: klippy/extras/led_effect.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, May  2 2024, 11:59:08) [GCC 12.2.0]'
Start printer at Wed Jul 10 10:55:25 2024 (1720605325.4 12.1)
===== Config file =====
[gcode_macro PARK]
gcode = 
	status_busy
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro CG28]
gcode = 
	status_homing
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro CQGL]
gcode = 
	{% if printer.quad_gantry_level.applied == False %}
	status_calibrating_z
	{% if "xyz" not in printer.toolhead.homed_axes %}
	status_homing
	G28
	{% endif %}
	QUAD_GANTRY_LEVEL
	{% endif %}

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	CG28
	CQGL
	G28 Z
	status_meshing
	BED_MESH_CALIBRATE ADAPTIVE=1
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	{% set target_bed = params.BED|int %}
	{% set target_extruder = params.EXTRUDER|int %}
	{% set target_chamber = params.CHAMBER|default("35")|int %}
	SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={target_chamber}
	status_heating
	M190 S{target_bed}
	M109 S{target_extruder}
	G32
	G90
	G1 Z20 F3000
	status_printing
	LINE_PURGE
	SFS_ENABLE

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	SFS_DISABLE
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{2 * th.axis_maximum.x//3} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	status_part_ready
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
description = Pause the actual running print

[gcode_macro RESUME]
rename_existing = RESUME_BASE
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}
description = Resume the actual running print
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False

[gcode_macro CANCEL_PRINT]
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE
description = Cancel the actual running print

[gcode_macro M600]
gcode = 
	
	PAUSE

[mcu EBBCan]
canbus_uuid = 5f35f76b28ae

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = EBBCan:gpio18
dir_pin = EBBCan:gpio19
enable_pin = !EBBCan:gpio17
microsteps = 32
rotation_distance = 21.9985825
gear_ratio = 50:10
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = EBBCan:gpio7
control = pid
pid_kp = 26.385
pid_ki = 3.383
pid_kd = 51.450
min_temp = -100
max_temp = 285
max_extrude_cross_section = 5
sensor_type = MAX31865
sensor_pin = EBBCan:gpio9
spi_software_sclk_pin = EBBCan:gpio10
spi_software_mosi_pin = EBBCan:gpio8
spi_software_miso_pin = EBBCan:gpio11
rtd_nominal_r = 1000
rtd_reference_r = 4300
rtd_num_of_wires = 2
rtd_use_50hz_filter = True

[tmc2209 extruder]
uart_pin = EBBCan:gpio20
run_current = 0.3
stealthchop_threshold = 999999

[fan]
pin = EBBCan:gpio13

[heater_fan hotend_fan]
pin = EBBCan:gpio14
heater = extruder
heater_temp = 50.0

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[neopixel UnderLighting]
pin = PB0
chain_count = 75
initial_red = 1.0
initial_green = 0.0
initial_blue = 0.0
color_order = GRB

[neopixel sb_leds]
pin = EBBCan:gpio16
chain_count = 10
color_order = GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW,  GRBW
initial_red = 1.0
initial_green = 0.0
initial_blue = 1.0
initial_white = 0.0

[led_effect sb_logo_busy]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1,0,0)

[led_effect sb_logo_cleaning]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.02, 0.5)

[led_effect sb_logo_calibrating_z]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.0, 0.35)

[led_effect sb_logo_heating]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (1, 0.18, 0)

[led_effect sb_logo_cooling]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
	neopixel:UnderLighting
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (0, 0, 1)

[led_effect sb_logo_homing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.6, 0.2)

[led_effect sb_logo_leveling]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.5, 0.1, 0.4)

[led_effect sb_logo_meshing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.2, 1.0, 0.0)

[led_effect sb_logo_printing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)

[led_effect sb_logo_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.01, 0.01, 0.01)

[led_effect sb_logo_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 1.0, 0.0)

[led_effect sb_nozzle_heating]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1.0, 0.18, 0.0, 0.0)

[led_effect sb_nozzle_cooling]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.0, 0.0, 1.0, 0.1)

[led_effect sb_nozzle_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 0.0, 0.0, 0.0)

[led_effect sb_nozzle_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 1.0, 0.0, 0.1)

[led_effect sb_critical_error]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
layers = 
	strobe         1  1.5   add        (1.0,  1.0, 1.0)
	breathing      2  0     difference (0.95, 0.0, 0.0)
	static         1  0     top        (1.0,  0.0, 0.0)
autostart = false
frame_rate = 24
run_on_error = true

[led_effect rainbow]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
autostart = true
frame_rate = 24
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.0, 0.3, 0.0),(0.0, 0.0, 0.3)

[led_effect set_nozzle_leds]
leds = 
	neopixel:sb_leds (9,10)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (0.0,  0.0, 0.0, 1.0)

[led_effect set_logo_leds]
leds = 
	neopixel:sb_leds (1,2,3,4,5,6,7,8)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (1.0,  1.0, 1.0)

[gcode_macro set_logo_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds STOP=1

[gcode_macro set_logo_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds

[gcode_macro set_nozzle_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds

[gcode_macro set_nozzle_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds STOP=1

[gcode_macro status_off]
gcode = 
	STOP_LED_EFFECTS

[gcode_macro status_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=rainbow

[gcode_macro status_part_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_nozzle_part_ready
	SET_LED_EFFECT EFFECT=sb_logo_part_ready

[gcode_macro status_busy]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_busy
	set_nozzle_leds_on

[gcode_macro status_heating]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_heating
	SET_LED_EFFECT EFFECT=sb_nozzle_heating

[gcode_macro status_cooling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cooling
	SET_LED_EFFECT EFFECT=sb_nozzle_cooling

[gcode_macro status_leveling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_leveling
	set_nozzle_leds_on

[gcode_macro status_homing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_homing
	set_nozzle_leds_on

[gcode_macro status_changeFilament]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_critical_error
	set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cleaning
	set_nozzle_leds_on

[gcode_macro status_meshing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_meshing
	set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_calibrating_z
	set_nozzle_leds_on

[gcode_macro status_printing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_printing
	set_nozzle_leds_on

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.4
variable_purge_amount = 40
variable_line_length = 75
variable_flow_rate = 12
variable_x_default = 10
variable_y_default = 10
variable_distance_to_object_y = 5
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
	{ action_respond_info("z_height        : %f" % (z_height))  }
	{ action_respond_info("purge_amount    : %f" % (purge_amount))  }
	{ action_respond_info("line_length     : %f" % (line_length))  }
	{ action_respond_info("flow_rate       : %f" % (flow_rate))  }
	{ action_respond_info("x_default       : %f" % (x_default))  }
	{ action_respond_info("y_default       : %f" % (y_default))  }
	{ action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
	{% endif %}
	
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
	{% set cross_section = nozzle_dia * z_height | float %}
	{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{x_origin} Y{y_origin - distance_to_object_y}
	G0 Z{z_height}
	M83
	G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}
	G1 E-.5 F2100
	G92 E0
	M82
	G0 Z{z_height * 2} F{travel_speed}

[gcode_macro SETUP_LINE_PURGE]
gcode = 
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

[exclude_object]

[gcode_arcs]
resolution = 0.1

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 4000
max_accel_to_decel = 4000
max_z_velocity = 20
max_z_accel = 350
square_corner_velocity = 5.0

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 50.0
shaper_type_y = mzv
shaper_freq_y = 37.8

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.75
min_temp = -200
max_temp = 120
control = pid
pid_kp = 44.597
pid_ki = 2.065
pid_kd = 240.826

[stepper_x]
step_pin = PF13
dir_pin = PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3
position_endstop = 1.456

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = !PC1
enable_pin = !PA0
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = !PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 122,350
speed = 500
z_hop = 10

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 500
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[probe]
pin = EBBCan:gpio6
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 7.5
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.01
samples_tolerance_retries = 5

[temperature_fan chamber]
pin = PD12
max_power = 0.65
shutdown_speed = 0.0
kick_start_time = 5.0
cycle_time = 0.01
off_below = 0.1
sensor_type = ATC Semitec 104GT-2
sensor_pin = PF4
min_temp = 0
max_temp = 70
target_temp = 35.0
control = watermark
gcode_id = C

[controller_fan controller_fan_0]
pin = PD13
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[controller_fan controller_fan_1]
pin = PD14
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[filament_motion_sensor SFS_T0]
detection_length = 14.00
extruder = extruder
switch_pin = ^PG12
pause_on_runout = True
event_delay = 3.0
pause_delay = 0.5
runout_gcode = 
	M117 Runout Detected!

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[gcode_macro SFS_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1

[gcode_macro SFS_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[output_pin caselight]
pin = PB10
pwm = true
shutdown_value = 0
value = 1
cycle_time = 0.01

[bed_mesh]
speed = 300
horizontal_move_z = 10
mesh_min = 40, 40
mesh_max = 310,310
fade_start = 0.6
fade_end = 10.0
probe_count = 7,7
adaptive_margin = 5
algorithm = bicubic
zero_reference_position = 175,175

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[display]
lcd_type = uc1701
cs_pin = EXP1_3
a0_pin = EXP1_4
rst_pin = EXP1_5
encoder_pins = ^EXP2_5, ^EXP2_3
click_pin = ^!EXP1_2
contrast = 63
spi_software_miso_pin = EXP2_1
spi_software_mosi_pin = EXP2_6
spi_software_sclk_pin = EXP2_2

[neopixel btt_mini12864]
pin = EXP1_6
chain_count = 3
initial_red = 0.0
initial_green = 0.0
initial_blue = 1.0
color_order = RGB

[bed_mesh default]
version = 1
points = 
	-0.027500, -0.022500, -0.021250, -0.025000
	-0.013750, -0.005000, -0.002500, -0.022500
	-0.008750, 0.013750, 0.023750, -0.011250
	-0.008750, -0.005000, -0.007500, -0.015000
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 112.02
max_x = 237.97
min_y = 112.84
max_y = 237.16
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 140734260600272: New connection
Loaded MCU 'mcu' 118 commands (v0.12.0-99-g5e3daa6f / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_i2c3=PA8,PC9 BUS_PINS_sdio=PC12,PD2,PC8,PC9,PC10,PC11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 CLOCK_FREQ=180000000 MCU=stm32f446xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'EBBCan': Starting CAN connect
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
webhooks client 140734260600272: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
Created a socket
mcu 'EBBCan': Unable to open CAN port: [Errno 19] No such device
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 787, in _mcu_identify
    self._serial.connect_canbus(self._serialport, nodeid,
  File "/home/pi/klipper/klippy/serialhdl.py", line 133, in connect_canbus
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/pi/klipper/klippy/mcu.py", line 798, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'EBBCan': Unable to connect
mcu 'EBBCan': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

No build file /home/pi/klipper/klippy/../.config
No build file /home/pi/klipper/klippy/../out/klipper.dict
No build file /home/pi/klipper/klippy/../out/klipper.elf
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-I', '/home/pi/printer_data/comms/klippy.serial', '-l', '/home/pi/printer_data/logs/klippy.log', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-261-g248d3dbf-dirty'
Untracked files: klippy/extras/led_effect.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, May  2 2024, 11:59:08) [GCC 12.2.0]'
Start printer at Wed Jul 10 11:16:41 2024 (1720606601.7 12.3)
===== Config file =====
[gcode_macro PARK]
gcode = 
	status_busy
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro CG28]
gcode = 
	status_homing
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro CQGL]
gcode = 
	{% if printer.quad_gantry_level.applied == False %}
	status_calibrating_z
	{% if "xyz" not in printer.toolhead.homed_axes %}
	status_homing
	G28
	{% endif %}
	QUAD_GANTRY_LEVEL
	{% endif %}

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	CG28
	CQGL
	G28 Z
	status_meshing
	BED_MESH_CALIBRATE ADAPTIVE=1
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	{% set target_bed = params.BED|int %}
	{% set target_extruder = params.EXTRUDER|int %}
	{% set target_chamber = params.CHAMBER|default("35")|int %}
	SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={target_chamber}
	status_heating
	M190 S{target_bed}
	M109 S{target_extruder}
	G32
	G90
	G1 Z20 F3000
	status_printing
	LINE_PURGE
	SFS_ENABLE

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	SFS_DISABLE
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{2 * th.axis_maximum.x//3} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	status_part_ready
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
description = Pause the actual running print

[gcode_macro RESUME]
rename_existing = RESUME_BASE
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}
description = Resume the actual running print
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False

[gcode_macro CANCEL_PRINT]
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE
description = Cancel the actual running print

[gcode_macro M600]
gcode = 
	
	PAUSE

[mcu EBBCan]
canbus_uuid = 5f35f76b28ae

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = EBBCan:gpio18
dir_pin = EBBCan:gpio19
enable_pin = !EBBCan:gpio17
microsteps = 32
rotation_distance = 21.9985825
gear_ratio = 50:10
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = EBBCan:gpio7
control = pid
pid_kp = 26.385
pid_ki = 3.383
pid_kd = 51.450
min_temp = -100
max_temp = 285
max_extrude_cross_section = 5
sensor_type = MAX31865
sensor_pin = EBBCan:gpio9
spi_software_sclk_pin = EBBCan:gpio10
spi_software_mosi_pin = EBBCan:gpio8
spi_software_miso_pin = EBBCan:gpio11
rtd_nominal_r = 1000
rtd_reference_r = 4300
rtd_num_of_wires = 2
rtd_use_50hz_filter = True

[tmc2209 extruder]
uart_pin = EBBCan:gpio20
run_current = 0.3
stealthchop_threshold = 999999

[fan]
pin = EBBCan:gpio13

[heater_fan hotend_fan]
pin = EBBCan:gpio14
heater = extruder
heater_temp = 50.0

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[neopixel UnderLighting]
pin = PB0
chain_count = 75
initial_red = 1.0
initial_green = 0.0
initial_blue = 0.0
color_order = GRB

[neopixel sb_leds]
pin = EBBCan:gpio16
chain_count = 10
color_order = GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW,  GRBW
initial_red = 1.0
initial_green = 0.0
initial_blue = 1.0
initial_white = 0.0

[led_effect sb_logo_busy]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1,0,0)

[led_effect sb_logo_cleaning]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.02, 0.5)

[led_effect sb_logo_calibrating_z]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.0, 0.35)

[led_effect sb_logo_heating]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (1, 0.18, 0)

[led_effect sb_logo_cooling]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
	neopixel:UnderLighting
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (0, 0, 1)

[led_effect sb_logo_homing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.6, 0.2)

[led_effect sb_logo_leveling]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.5, 0.1, 0.4)

[led_effect sb_logo_meshing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.2, 1.0, 0.0)

[led_effect sb_logo_printing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)

[led_effect sb_logo_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.01, 0.01, 0.01)

[led_effect sb_logo_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 1.0, 0.0)

[led_effect sb_nozzle_heating]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1.0, 0.18, 0.0, 0.0)

[led_effect sb_nozzle_cooling]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.0, 0.0, 1.0, 0.1)

[led_effect sb_nozzle_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 0.0, 0.0, 0.0)

[led_effect sb_nozzle_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 1.0, 0.0, 0.1)

[led_effect sb_critical_error]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
layers = 
	strobe         1  1.5   add        (1.0,  1.0, 1.0)
	breathing      2  0     difference (0.95, 0.0, 0.0)
	static         1  0     top        (1.0,  0.0, 0.0)
autostart = false
frame_rate = 24
run_on_error = true

[led_effect rainbow]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
autostart = true
frame_rate = 24
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.0, 0.3, 0.0),(0.0, 0.0, 0.3)

[led_effect set_nozzle_leds]
leds = 
	neopixel:sb_leds (9,10)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (0.0,  0.0, 0.0, 1.0)

[led_effect set_logo_leds]
leds = 
	neopixel:sb_leds (1,2,3,4,5,6,7,8)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (1.0,  1.0, 1.0)

[gcode_macro set_logo_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds STOP=1

[gcode_macro set_logo_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds

[gcode_macro set_nozzle_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds

[gcode_macro set_nozzle_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds STOP=1

[gcode_macro status_off]
gcode = 
	STOP_LED_EFFECTS

[gcode_macro status_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=rainbow

[gcode_macro status_part_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_nozzle_part_ready
	SET_LED_EFFECT EFFECT=sb_logo_part_ready

[gcode_macro status_busy]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_busy
	set_nozzle_leds_on

[gcode_macro status_heating]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_heating
	SET_LED_EFFECT EFFECT=sb_nozzle_heating

[gcode_macro status_cooling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cooling
	SET_LED_EFFECT EFFECT=sb_nozzle_cooling

[gcode_macro status_leveling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_leveling
	set_nozzle_leds_on

[gcode_macro status_homing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_homing
	set_nozzle_leds_on

[gcode_macro status_changeFilament]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_critical_error
	set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cleaning
	set_nozzle_leds_on

[gcode_macro status_meshing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_meshing
	set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_calibrating_z
	set_nozzle_leds_on

[gcode_macro status_printing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_printing
	set_nozzle_leds_on

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.4
variable_purge_amount = 40
variable_line_length = 75
variable_flow_rate = 12
variable_x_default = 10
variable_y_default = 10
variable_distance_to_object_y = 5
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
	{ action_respond_info("z_height        : %f" % (z_height))  }
	{ action_respond_info("purge_amount    : %f" % (purge_amount))  }
	{ action_respond_info("line_length     : %f" % (line_length))  }
	{ action_respond_info("flow_rate       : %f" % (flow_rate))  }
	{ action_respond_info("x_default       : %f" % (x_default))  }
	{ action_respond_info("y_default       : %f" % (y_default))  }
	{ action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
	{% endif %}
	
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
	{% set cross_section = nozzle_dia * z_height | float %}
	{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{x_origin} Y{y_origin - distance_to_object_y}
	G0 Z{z_height}
	M83
	G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}
	G1 E-.5 F2100
	G92 E0
	M82
	G0 Z{z_height * 2} F{travel_speed}

[gcode_macro SETUP_LINE_PURGE]
gcode = 
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

[exclude_object]

[gcode_arcs]
resolution = 0.1

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 4000
max_accel_to_decel = 4000
max_z_velocity = 20
max_z_accel = 350
square_corner_velocity = 5.0

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 50.0
shaper_type_y = mzv
shaper_freq_y = 37.8

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.75
min_temp = -200
max_temp = 120
control = pid
pid_kp = 44.597
pid_ki = 2.065
pid_kd = 240.826

[stepper_x]
step_pin = PF13
dir_pin = PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3
position_endstop = 1.456

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = !PC1
enable_pin = !PA0
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = !PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 122,350
speed = 500
z_hop = 10

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 500
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[probe]
pin = EBBCan:gpio6
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 7.5
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.01
samples_tolerance_retries = 5

[temperature_fan chamber]
pin = PD12
max_power = 0.65
shutdown_speed = 0.0
kick_start_time = 5.0
cycle_time = 0.01
off_below = 0.1
sensor_type = ATC Semitec 104GT-2
sensor_pin = PF4
min_temp = 0
max_temp = 70
target_temp = 35.0
control = watermark
gcode_id = C

[controller_fan controller_fan_0]
pin = PD13
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[controller_fan controller_fan_1]
pin = PD14
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[filament_motion_sensor SFS_T0]
detection_length = 14.00
extruder = extruder
switch_pin = ^PG12
pause_on_runout = True
event_delay = 3.0
pause_delay = 0.5
runout_gcode = 
	M117 Runout Detected!

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[gcode_macro SFS_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1

[gcode_macro SFS_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[output_pin caselight]
pin = PB10
pwm = true
shutdown_value = 0
value = 1
cycle_time = 0.01

[bed_mesh]
speed = 300
horizontal_move_z = 10
mesh_min = 40, 40
mesh_max = 310,310
fade_start = 0.6
fade_end = 10.0
probe_count = 7,7
adaptive_margin = 5
algorithm = bicubic
zero_reference_position = 175,175

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[display]
lcd_type = uc1701
cs_pin = EXP1_3
a0_pin = EXP1_4
rst_pin = EXP1_5
encoder_pins = ^EXP2_5, ^EXP2_3
click_pin = ^!EXP1_2
contrast = 63
spi_software_miso_pin = EXP2_1
spi_software_mosi_pin = EXP2_6
spi_software_sclk_pin = EXP2_2

[neopixel btt_mini12864]
pin = EXP1_6
chain_count = 3
initial_red = 0.0
initial_green = 0.0
initial_blue = 1.0
color_order = RGB

[bed_mesh default]
version = 1
points = 
	-0.027500, -0.022500, -0.021250, -0.025000
	-0.013750, -0.005000, -0.002500, -0.022500
	-0.008750, 0.013750, 0.023750, -0.011250
	-0.008750, -0.005000, -0.007500, -0.015000
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 112.02
max_x = 237.97
min_y = 112.84
max_y = 237.16
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 140733627326544: New connection
Loaded MCU 'mcu' 118 commands (v0.12.0-99-g5e3daa6f / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_i2c3=PA8,PC9 BUS_PINS_sdio=PC12,PD2,PC8,PC9,PC10,PC11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 CLOCK_FREQ=180000000 MCU=stm32f446xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'EBBCan': Starting CAN connect
Created a socket
webhooks client 140733627326544: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
Created a socket
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
mcu 'EBBCan': Timeout on connect
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 787, in _mcu_identify
    self._serial.connect_canbus(self._serialport, nodeid,
  File "/home/pi/klipper/klippy/serialhdl.py", line 133, in connect_canbus
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 131, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 223, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/klippy.py", line 223, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
            ^^^^^^^^^^^
  File "/home/pi/klipper/klippy/mcu.py", line 798, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'EBBCan': Unable to connect
mcu 'EBBCan': Unable to connect
Once the underlying issue is corrected, use the
"FIRMWARE_RESTART" command to reset the firmware, reload the
config, and restart the host software.
Error configuring printer

Build file /home/pi/klipper/klippy/../.config(2040): Wed Jul 10 11:17:47 2024
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
# CONFIG_MACH_STM32 is not set
# CONFIG_MACH_HC32F460 is not set
CONFIG_MACH_RP2040=y
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_AR100 is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="rp2040"
CONFIG_MCU="rp2040"
CONFIG_CLOCK_FREQ=12000000
CONFIG_FLASH_SIZE=0x200000
CONFIG_FLASH_BOOT_ADDRESS=0x10000100
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x42000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x10004000
CONFIG_RP2040_SELECT=y
CONFIG_RP2040_HAVE_BOOTLOADER=y
# CONFIG_RP2040_FLASH_START_0100 is not set
CONFIG_RP2040_FLASH_START_4000=y
CONFIG_RP2040_STAGE2_FILE="boot2_w25q080.S"
CONFIG_RP2040_STAGE2_CLKDIV=2
# CONFIG_RP2040_USB is not set
# CONFIG_RP2040_SERIAL_UART0_PINS_0_1 is not set
# CONFIG_RP2040_SERIAL_UART0_PINS_12_13 is not set
# CONFIG_RP2040_SERIAL_UART0_PINS_16_17 is not set
# CONFIG_RP2040_SERIAL_UART0_PINS_28_29 is not set
# CONFIG_RP2040_SERIAL_UART1_PINS_4_5 is not set
# CONFIG_RP2040_SERIAL_UART1_PINS_8_9 is not set
# CONFIG_RP2040_SERIAL_UART1_PINS_20_21 is not set
# CONFIG_RP2040_SERIAL_UART1_PINS_24_25 is not set
CONFIG_RP2040_CANBUS=y
# CONFIG_RP2040_USBCANBUS is not set
CONFIG_RP2040_CANBUS_GPIO_RX=4
CONFIG_RP2040_CANBUS_GPIO_TX=5
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_WANT_GPIO_BITBANGING=y
CONFIG_WANT_DISPLAYS=y
CONFIG_WANT_SENSORS=y
CONFIG_WANT_LIS2DW=y
CONFIG_WANT_LDC1612=y
CONFIG_WANT_SOFTWARE_I2C=y
CONFIG_WANT_SOFTWARE_SPI=y
CONFIG_NEED_SENSOR_BULK=y
CONFIG_CANSERIAL=y
CONFIG_CANBUS=y
CONFIG_CANBUS_FREQUENCY=1000000
CONFIG_CANBUS_FILTER=y
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(8629): Wed Jul 10 11:18:01 2024
Last MCU build version: v0.12.0-261-g248d3dbf
Last MCU build tools: gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CANBUS_FREQUENCY=1000000 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=gpio4,gpio5 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(1769568): Wed Jul 10 11:18:02 2024
mcu 'EBBCan': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 262, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/pi/klipper/klippy/serialhdl.py", line 319, in get_response
    self.serial.raw_send_wait_ack(cmds[-1], minclock, reqclock,
  File "/home/pi/klipper/klippy/serialhdl.py", line 254, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'EBBCan': Serial connection closed
Attempting MCU 'mcu' reset command
b'Got EOF when reading from device'
Unable to issue reset command on MCU 'EBBCan'
webhooks client 140733627326544: Disconnected
Restarting printer
Start printer at Wed Jul 10 11:21:15 2024 (1720606875.8 286.2)
===== Config file =====
[gcode_macro PARK]
gcode = 
	status_busy
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro CG28]
gcode = 
	status_homing
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro CQGL]
gcode = 
	{% if printer.quad_gantry_level.applied == False %}
	status_calibrating_z
	{% if "xyz" not in printer.toolhead.homed_axes %}
	status_homing
	G28
	{% endif %}
	QUAD_GANTRY_LEVEL
	{% endif %}

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	CG28
	CQGL
	G28 Z
	status_meshing
	BED_MESH_CALIBRATE ADAPTIVE=1
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	{% set target_bed = params.BED|int %}
	{% set target_extruder = params.EXTRUDER|int %}
	{% set target_chamber = params.CHAMBER|default("35")|int %}
	SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={target_chamber}
	status_heating
	M190 S{target_bed}
	M109 S{target_extruder}
	G32
	G90
	G1 Z20 F3000
	status_printing
	LINE_PURGE
	SFS_ENABLE

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	SFS_DISABLE
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{2 * th.axis_maximum.x//3} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	status_part_ready
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
description = Pause the actual running print

[gcode_macro RESUME]
rename_existing = RESUME_BASE
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}
description = Resume the actual running print
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False

[gcode_macro CANCEL_PRINT]
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE
description = Cancel the actual running print

[gcode_macro M600]
gcode = 
	
	PAUSE

[mcu EBBCan]
canbus_uuid = 5f35f76b28ae

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = EBBCan:gpio18
dir_pin = EBBCan:gpio19
enable_pin = !EBBCan:gpio17
microsteps = 32
rotation_distance = 21.9985825
gear_ratio = 50:10
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = EBBCan:gpio7
control = pid
pid_kp = 26.385
pid_ki = 3.383
pid_kd = 51.450
min_temp = -100
max_temp = 285
max_extrude_cross_section = 5
sensor_type = MAX31865
sensor_pin = EBBCan:gpio9
spi_software_sclk_pin = EBBCan:gpio10
spi_software_mosi_pin = EBBCan:gpio8
spi_software_miso_pin = EBBCan:gpio11
rtd_nominal_r = 1000
rtd_reference_r = 4300
rtd_num_of_wires = 2
rtd_use_50hz_filter = True

[tmc2209 extruder]
uart_pin = EBBCan:gpio20
run_current = 0.3
stealthchop_threshold = 999999

[fan]
pin = EBBCan:gpio13

[heater_fan hotend_fan]
pin = EBBCan:gpio14
heater = extruder
heater_temp = 50.0

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[neopixel UnderLighting]
pin = PB0
chain_count = 75
initial_red = 1.0
initial_green = 0.0
initial_blue = 0.0
color_order = GRB

[neopixel sb_leds]
pin = EBBCan:gpio16
chain_count = 10
color_order = GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW,  GRBW
initial_red = 1.0
initial_green = 0.0
initial_blue = 1.0
initial_white = 0.0

[led_effect sb_logo_busy]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1,0,0)

[led_effect sb_logo_cleaning]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.02, 0.5)

[led_effect sb_logo_calibrating_z]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.0, 0.35)

[led_effect sb_logo_heating]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (1, 0.18, 0)

[led_effect sb_logo_cooling]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
	neopixel:UnderLighting
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (0, 0, 1)

[led_effect sb_logo_homing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.6, 0.2)

[led_effect sb_logo_leveling]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.5, 0.1, 0.4)

[led_effect sb_logo_meshing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.2, 1.0, 0.0)

[led_effect sb_logo_printing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)

[led_effect sb_logo_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.01, 0.01, 0.01)

[led_effect sb_logo_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 1.0, 0.0)

[led_effect sb_nozzle_heating]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1.0, 0.18, 0.0, 0.0)

[led_effect sb_nozzle_cooling]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.0, 0.0, 1.0, 0.1)

[led_effect sb_nozzle_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 0.0, 0.0, 0.0)

[led_effect sb_nozzle_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 1.0, 0.0, 0.1)

[led_effect sb_critical_error]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
layers = 
	strobe         1  1.5   add        (1.0,  1.0, 1.0)
	breathing      2  0     difference (0.95, 0.0, 0.0)
	static         1  0     top        (1.0,  0.0, 0.0)
autostart = false
frame_rate = 24
run_on_error = true

[led_effect rainbow]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
autostart = true
frame_rate = 24
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.0, 0.3, 0.0),(0.0, 0.0, 0.3)

[led_effect set_nozzle_leds]
leds = 
	neopixel:sb_leds (9,10)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (0.0,  0.0, 0.0, 1.0)

[led_effect set_logo_leds]
leds = 
	neopixel:sb_leds (1,2,3,4,5,6,7,8)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (1.0,  1.0, 1.0)

[gcode_macro set_logo_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds STOP=1

[gcode_macro set_logo_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds

[gcode_macro set_nozzle_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds

[gcode_macro set_nozzle_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds STOP=1

[gcode_macro status_off]
gcode = 
	STOP_LED_EFFECTS

[gcode_macro status_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=rainbow

[gcode_macro status_part_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_nozzle_part_ready
	SET_LED_EFFECT EFFECT=sb_logo_part_ready

[gcode_macro status_busy]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_busy
	set_nozzle_leds_on

[gcode_macro status_heating]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_heating
	SET_LED_EFFECT EFFECT=sb_nozzle_heating

[gcode_macro status_cooling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cooling
	SET_LED_EFFECT EFFECT=sb_nozzle_cooling

[gcode_macro status_leveling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_leveling
	set_nozzle_leds_on

[gcode_macro status_homing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_homing
	set_nozzle_leds_on

[gcode_macro status_changeFilament]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_critical_error
	set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cleaning
	set_nozzle_leds_on

[gcode_macro status_meshing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_meshing
	set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_calibrating_z
	set_nozzle_leds_on

[gcode_macro status_printing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_printing
	set_nozzle_leds_on

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.4
variable_purge_amount = 40
variable_line_length = 75
variable_flow_rate = 12
variable_x_default = 10
variable_y_default = 10
variable_distance_to_object_y = 5
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
	{ action_respond_info("z_height        : %f" % (z_height))  }
	{ action_respond_info("purge_amount    : %f" % (purge_amount))  }
	{ action_respond_info("line_length     : %f" % (line_length))  }
	{ action_respond_info("flow_rate       : %f" % (flow_rate))  }
	{ action_respond_info("x_default       : %f" % (x_default))  }
	{ action_respond_info("y_default       : %f" % (y_default))  }
	{ action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
	{% endif %}
	
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
	{% set cross_section = nozzle_dia * z_height | float %}
	{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{x_origin} Y{y_origin - distance_to_object_y}
	G0 Z{z_height}
	M83
	G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}
	G1 E-.5 F2100
	G92 E0
	M82
	G0 Z{z_height * 2} F{travel_speed}

[gcode_macro SETUP_LINE_PURGE]
gcode = 
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

[exclude_object]

[gcode_arcs]
resolution = 0.1

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 4000
max_accel_to_decel = 4000
max_z_velocity = 20
max_z_accel = 350
square_corner_velocity = 5.0

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 50.0
shaper_type_y = mzv
shaper_freq_y = 37.8

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.75
min_temp = -200
max_temp = 120
control = pid
pid_kp = 44.597
pid_ki = 2.065
pid_kd = 240.826

[stepper_x]
step_pin = PF13
dir_pin = PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3
position_endstop = 1.456

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = !PC1
enable_pin = !PA0
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = !PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 122,350
speed = 500
z_hop = 10

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 500
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[probe]
pin = EBBCan:gpio6
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 7.5
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.01
samples_tolerance_retries = 5

[temperature_fan chamber]
pin = PD12
max_power = 0.65
shutdown_speed = 0.0
kick_start_time = 5.0
cycle_time = 0.01
off_below = 0.1
sensor_type = ATC Semitec 104GT-2
sensor_pin = PF4
min_temp = 0
max_temp = 70
target_temp = 35.0
control = watermark
gcode_id = C

[controller_fan controller_fan_0]
pin = PD13
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[controller_fan controller_fan_1]
pin = PD14
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[filament_motion_sensor SFS_T0]
detection_length = 14.00
extruder = extruder
switch_pin = ^PG12
pause_on_runout = True
event_delay = 3.0
pause_delay = 0.5
runout_gcode = 
	M117 Runout Detected!

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[gcode_macro SFS_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1

[gcode_macro SFS_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[output_pin caselight]
pin = PB10
pwm = true
shutdown_value = 0
value = 1
cycle_time = 0.01

[bed_mesh]
speed = 300
horizontal_move_z = 10
mesh_min = 40, 40
mesh_max = 310,310
fade_start = 0.6
fade_end = 10.0
probe_count = 7,7
adaptive_margin = 5
algorithm = bicubic
zero_reference_position = 175,175

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[display]
lcd_type = uc1701
cs_pin = EXP1_3
a0_pin = EXP1_4
rst_pin = EXP1_5
encoder_pins = ^EXP2_5, ^EXP2_3
click_pin = ^!EXP1_2
contrast = 63
spi_software_miso_pin = EXP2_1
spi_software_mosi_pin = EXP2_6
spi_software_sclk_pin = EXP2_2

[neopixel btt_mini12864]
pin = EXP1_6
chain_count = 3
initial_red = 0.0
initial_green = 0.0
initial_blue = 1.0
color_order = RGB

[bed_mesh default]
version = 1
points = 
	-0.027500, -0.022500, -0.021250, -0.025000
	-0.013750, -0.005000, -0.002500, -0.022500
	-0.008750, 0.013750, 0.023750, -0.011250
	-0.008750, -0.005000, -0.007500, -0.015000
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 112.02
max_x = 237.97
min_y = 112.84
max_y = 237.16
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00'
webhooks client 140733600259280: New connection
webhooks client 140733600259280: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
Loaded MCU 'mcu' 118 commands (v0.12.0-99-g5e3daa6f / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_i2c3=PA8,PC9 BUS_PINS_sdio=PC12,PD2,PC8,PC9,PC10,PC11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 CLOCK_FREQ=180000000 MCU=stm32f446xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'EBBCan': Starting CAN connect
Created a socket
Loaded MCU 'EBBCan' 115 commands (v0.12.0-261-g248d3dbf / gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40)
MCU 'EBBCan' config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CANBUS_FREQUENCY=1000000 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=gpio4,gpio5 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'EBBCan' printer configuration...
Configured MCU 'EBBCan' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 15.0)    | (40.0, 40.0)
  1   | (85.0, 15.0)    | (85.0, 40.0)
  2   | (130.0, 15.0)   | (130.0, 40.0)
  3   | (175.0, 15.0)   | (175.0, 40.0)
  4   | (220.0, 15.0)   | (220.0, 40.0)
  5   | (265.0, 15.0)   | (265.0, 40.0)
  6   | (310.0, 15.0)   | (310.0, 40.0)
  7   | (310.0, 60.0)   | (310.0, 85.0)
  8   | (265.0, 60.0)   | (265.0, 85.0)
  9   | (220.0, 60.0)   | (220.0, 85.0)
  10  | (175.0, 60.0)   | (175.0, 85.0)
  11  | (130.0, 60.0)   | (130.0, 85.0)
  12  | (85.0, 60.0)    | (85.0, 85.0)
  13  | (40.0, 60.0)    | (40.0, 85.0)
  14  | (40.0, 105.0)   | (40.0, 130.0)
  15  | (85.0, 105.0)   | (85.0, 130.0)
  16  | (130.0, 105.0)  | (130.0, 130.0)
  17  | (175.0, 105.0)  | (175.0, 130.0)
  18  | (220.0, 105.0)  | (220.0, 130.0)
  19  | (265.0, 105.0)  | (265.0, 130.0)
  20  | (310.0, 105.0)  | (310.0, 130.0)
  21  | (310.0, 150.0)  | (310.0, 175.0)
  22  | (265.0, 150.0)  | (265.0, 175.0)
  23  | (220.0, 150.0)  | (220.0, 175.0)
  24  | (175.0, 150.0)  | (175.0, 175.0)
  25  | (130.0, 150.0)  | (130.0, 175.0)
  26  | (85.0, 150.0)   | (85.0, 175.0)
  27  | (40.0, 150.0)   | (40.0, 175.0)
  28  | (40.0, 195.0)   | (40.0, 220.0)
  29  | (85.0, 195.0)   | (85.0, 220.0)
  30  | (130.0, 195.0)  | (130.0, 220.0)
  31  | (175.0, 195.0)  | (175.0, 220.0)
  32  | (220.0, 195.0)  | (220.0, 220.0)
  33  | (265.0, 195.0)  | (265.0, 220.0)
  34  | (310.0, 195.0)  | (310.0, 220.0)
  35  | (310.0, 240.0)  | (310.0, 265.0)
  36  | (265.0, 240.0)  | (265.0, 265.0)
  37  | (220.0, 240.0)  | (220.0, 265.0)
  38  | (175.0, 240.0)  | (175.0, 265.0)
  39  | (130.0, 240.0)  | (130.0, 265.0)
  40  | (85.0, 240.0)   | (85.0, 265.0)
  41  | (40.0, 240.0)   | (40.0, 265.0)
  42  | (40.0, 285.0)   | (40.0, 310.0)
  43  | (85.0, 285.0)   | (85.0, 310.0)
  44  | (130.0, 285.0)  | (130.0, 310.0)
  45  | (175.0, 285.0)  | (175.0, 310.0)
  46  | (220.0, 285.0)  | (220.0, 310.0)
  47  | (265.0, 285.0)  | (265.0, 310.0)
  48  | (310.0, 285.0)  | (310.0, 310.0)
bed_mesh: zero_reference_position is (175.00, 175.00)
Starting heater checks for extruder
Stats 293.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=3798 bytes_read=6970 bytes_retransmit=9 bytes_invalid=0 send_seq=271 receive_seq=271 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=3152 freq=180052869 EBBCan: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=1450 bytes_read=4869 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000214 adj=11979136 EBB_NTC: temp=0.0  heater_bed: target=0 temp=0.0 pwm=0.000 sysload=0.15 cputime=1.413 memavail=3830896 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 140733600259280
webhooks: registering remote method 'reboot_machine' for connection id: 140733600259280
webhooks: registering remote method 'pause_job_queue' for connection id: 140733600259280
webhooks: registering remote method 'start_job_queue' for connection id: 140733600259280
Stats 294.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=15083 bytes_read=8498 bytes_retransmit=9 bytes_invalid=0 send_seq=516 receive_seq=516 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180051516 EBBCan: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2658 bytes_read=5410 bytes_retransmit=0 bytes_invalid=0 send_seq=195 receive_seq=195 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000259 adj=12003256 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.7 pwm=0.000 sysload=0.15 cputime=1.467 memavail=3830912 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=33.0 pwm=0.000
Stats 295.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=22830 bytes_read=9736 bytes_retransmit=9 bytes_invalid=0 send_seq=705 receive_seq=705 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180042386 EBBCan: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=3883 bytes_read=5977 bytes_retransmit=0 bytes_invalid=0 send_seq=243 receive_seq=243 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000356 adj=12001831 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.7 pwm=0.000 sysload=0.14 cputime=1.514 memavail=3830688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=33.0 pwm=0.000
Stats 296.5: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=30527 bytes_read=10921 bytes_retransmit=9 bytes_invalid=0 send_seq=886 receive_seq=885 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180034984 EBBCan: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=5050 bytes_read=6473 bytes_retransmit=0 bytes_invalid=0 send_seq=283 receive_seq=283 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000369 adj=12001904 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.8 pwm=0.000 sysload=0.14 cputime=1.554 memavail=3830688 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=33.0 pwm=0.000
Stats 297.5: gcodein=0  mcu: mcu_awake=0.202 mcu_task_avg=0.000083 mcu_task_stddev=0.000084 bytes_write=37875 bytes_read=12097 bytes_retransmit=9 bytes_invalid=0 send_seq=1053 receive_seq=1053 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180029575 EBBCan: mcu_awake=0.057 mcu_task_avg=0.000026 mcu_task_stddev=0.000076 bytes_write=6198 bytes_read=7011 bytes_retransmit=0 bytes_invalid=0 send_seq=330 receive_seq=330 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000347 adj=12001889 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.8 pwm=0.000 sysload=0.14 cputime=1.595 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 298.5: gcodein=0  mcu: mcu_awake=0.202 mcu_task_avg=0.000083 mcu_task_stddev=0.000084 bytes_write=45540 bytes_read=13250 bytes_retransmit=9 bytes_invalid=0 send_seq=1225 receive_seq=1225 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180025520 EBBCan: mcu_awake=0.057 mcu_task_avg=0.000026 mcu_task_stddev=0.000076 bytes_write=7380 bytes_read=7543 bytes_retransmit=0 bytes_invalid=0 send_seq=371 receive_seq=371 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000356 adj=12001734 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.7 pwm=0.000 sysload=0.14 cputime=1.637 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=33.0 pwm=0.000
Stats 299.5: gcodein=0  mcu: mcu_awake=0.202 mcu_task_avg=0.000083 mcu_task_stddev=0.000084 bytes_write=53211 bytes_read=14423 bytes_retransmit=9 bytes_invalid=0 send_seq=1401 receive_seq=1401 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180020472 EBBCan: mcu_awake=0.057 mcu_task_avg=0.000026 mcu_task_stddev=0.000076 bytes_write=8546 bytes_read=8029 bytes_retransmit=0 bytes_invalid=0 send_seq=409 receive_seq=409 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000402 adj=12001623 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.7 pwm=0.000 sysload=0.14 cputime=1.679 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 300.5: gcodein=0  mcu: mcu_awake=0.202 mcu_task_avg=0.000083 mcu_task_stddev=0.000084 bytes_write=60907 bytes_read=15646 bytes_retransmit=9 bytes_invalid=0 send_seq=1581 receive_seq=1581 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180018414 EBBCan: mcu_awake=0.057 mcu_task_avg=0.000026 mcu_task_stddev=0.000076 bytes_write=9744 bytes_read=8570 bytes_retransmit=0 bytes_invalid=0 send_seq=458 receive_seq=458 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000387 adj=12001960 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.6 pwm=0.000 sysload=0.13 cputime=1.723 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 301.5: gcodein=0  mcu: mcu_awake=0.202 mcu_task_avg=0.000083 mcu_task_stddev=0.000084 bytes_write=68560 bytes_read=16796 bytes_retransmit=9 bytes_invalid=0 send_seq=1760 receive_seq=1754 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=45 upcoming_bytes=0 freq=180016412 EBBCan: mcu_awake=0.057 mcu_task_avg=0.000026 mcu_task_stddev=0.000076 bytes_write=10913 bytes_read=9084 bytes_retransmit=0 bytes_invalid=0 send_seq=498 receive_seq=497 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000375 adj=12001605 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.7 pwm=0.000 sysload=0.13 cputime=1.764 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=33.0 pwm=0.000
Stats 302.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=75965 bytes_read=17977 bytes_retransmit=9 bytes_invalid=0 send_seq=1929 receive_seq=1929 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180022670 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000104 bytes_write=12087 bytes_read=9630 bytes_retransmit=0 bytes_invalid=0 send_seq=544 receive_seq=544 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000363 adj=12001394 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.6 pwm=0.000 sysload=0.13 cputime=1.805 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 303.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=83676 bytes_read=19215 bytes_retransmit=9 bytes_invalid=0 send_seq=2112 receive_seq=2112 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180019536 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000104 bytes_write=13287 bytes_read=10171 bytes_retransmit=0 bytes_invalid=0 send_seq=593 receive_seq=593 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000353 adj=11999358 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.6 pwm=0.000 sysload=0.13 cputime=1.857 memavail=3830736 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 304.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=91341 bytes_read=20378 bytes_retransmit=9 bytes_invalid=0 send_seq=2286 receive_seq=2286 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180014200 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000104 bytes_write=14498 bytes_read=10756 bytes_retransmit=0 bytes_invalid=0 send_seq=643 receive_seq=643 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000348 adj=11999977 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.6 pwm=0.000 sysload=0.13 cputime=1.900 memavail=3830848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 305.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=99011 bytes_read=21573 bytes_retransmit=9 bytes_invalid=0 send_seq=2468 receive_seq=2468 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=44 upcoming_bytes=0 freq=180013099 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000104 bytes_write=15700 bytes_read=11284 bytes_retransmit=0 bytes_invalid=0 send_seq=691 receive_seq=691 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=22 upcoming_bytes=0 freq=12000345 adj=12001095 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.6 pwm=0.000 sysload=0.12 cputime=1.943 memavail=3830848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 306.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=106406 bytes_read=22746 bytes_retransmit=9 bytes_invalid=0 send_seq=2638 receive_seq=2638 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180012199 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000104 bytes_write=16851 bytes_read=11780 bytes_retransmit=0 bytes_invalid=0 send_seq=731 receive_seq=731 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000344 adj=12000965 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.12 cputime=1.982 memavail=3830848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 307.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000126 mcu_task_stddev=0.000000 bytes_write=114075 bytes_read=23917 bytes_retransmit=9 bytes_invalid=0 send_seq=2811 receive_seq=2811 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180011190 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=18050 bytes_read=12378 bytes_retransmit=0 bytes_invalid=0 send_seq=780 receive_seq=780 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000346 adj=12000851 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.12 cputime=2.024 memavail=3830848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 308.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000126 mcu_task_stddev=0.000000 bytes_write=121753 bytes_read=25090 bytes_retransmit=9 bytes_invalid=0 send_seq=2987 receive_seq=2987 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180010483 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=19272 bytes_read=12927 bytes_retransmit=0 bytes_invalid=0 send_seq=829 receive_seq=829 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000347 adj=12000839 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.12 cputime=2.065 memavail=3830848 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 309.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000126 mcu_task_stddev=0.000000 bytes_write=129435 bytes_read=26280 bytes_retransmit=9 bytes_invalid=0 send_seq=3162 receive_seq=3162 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=23 upcoming_bytes=0 freq=180009907 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=20442 bytes_read=13430 bytes_retransmit=0 bytes_invalid=0 send_seq=872 receive_seq=872 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=23 upcoming_bytes=0 freq=12000355 adj=12000760 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.12 cputime=2.106 memavail=3830880 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 310.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000126 mcu_task_stddev=0.000000 bytes_write=136844 bytes_read=27439 bytes_retransmit=9 bytes_invalid=0 send_seq=3336 receive_seq=3336 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180007993 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=21583 bytes_read=13962 bytes_retransmit=0 bytes_invalid=0 send_seq=913 receive_seq=913 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000354 adj=12000714 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.11 cputime=2.148 memavail=3830880 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 311.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000126 mcu_task_stddev=0.000000 bytes_write=144555 bytes_read=28640 bytes_retransmit=9 bytes_invalid=0 send_seq=3519 receive_seq=3519 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180007802 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=22764 bytes_read=14473 bytes_retransmit=0 bytes_invalid=0 send_seq=956 receive_seq=956 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000354 adj=12001116 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.11 cputime=2.190 memavail=3830880 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 312.5: gcodein=0  mcu: mcu_awake=0.296 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=152272 bytes_read=29891 bytes_retransmit=9 bytes_invalid=0 send_seq=3702 receive_seq=3702 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180007603 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=23994 bytes_read=15029 bytes_retransmit=0 bytes_invalid=0 send_seq=1005 receive_seq=1005 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000352 adj=12000861 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.11 cputime=2.231 memavail=3830880 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 313.5: gcodein=0  mcu: mcu_awake=0.296 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=159950 bytes_read=31051 bytes_retransmit=9 bytes_invalid=0 send_seq=3878 receive_seq=3877 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180007342 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=25198 bytes_read=15588 bytes_retransmit=0 bytes_invalid=0 send_seq=1054 receive_seq=1053 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000349 adj=12000664 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.11 cputime=2.273 memavail=3830880 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 314.5: gcodein=0  mcu: mcu_awake=0.296 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=167324 bytes_read=32214 bytes_retransmit=9 bytes_invalid=0 send_seq=4051 receive_seq=4051 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180006997 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=26345 bytes_read=16119 bytes_retransmit=0 bytes_invalid=0 send_seq=1100 receive_seq=1100 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000348 adj=12000548 EBB_NTC: temp=33.2  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.11 cputime=2.313 memavail=3830896 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 315.5: gcodein=0  mcu: mcu_awake=0.296 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=175035 bytes_read=33437 bytes_retransmit=9 bytes_invalid=0 send_seq=4231 receive_seq=4231 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180006581 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=27526 bytes_read=16615 bytes_retransmit=0 bytes_invalid=0 send_seq=1140 receive_seq=1140 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000346 adj=12000505 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.18 cputime=2.355 memavail=3830896 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 316.5: gcodein=0  mcu: mcu_awake=0.296 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=182713 bytes_read=34625 bytes_retransmit=9 bytes_invalid=0 send_seq=4410 receive_seq=4410 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180006416 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=28683 bytes_read=17127 bytes_retransmit=0 bytes_invalid=0 send_seq=1177 receive_seq=1177 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000344 adj=12000508 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.18 cputime=2.397 memavail=3830896 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 317.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000127 mcu_task_stddev=0.000000 bytes_write=190399 bytes_read=35816 bytes_retransmit=9 bytes_invalid=0 send_seq=4587 receive_seq=4587 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180006300 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=29876 bytes_read=17678 bytes_retransmit=0 bytes_invalid=0 send_seq=1225 receive_seq=1225 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000343 adj=12000416 EBB_NTC: temp=33.2  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.18 cputime=2.438 memavail=3830896 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 318.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000127 mcu_task_stddev=0.000000 bytes_write=198076 bytes_read=37031 bytes_retransmit=9 bytes_invalid=0 send_seq=4767 receive_seq=4767 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=23 upcoming_bytes=0 freq=180005258 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=31052 bytes_read=18191 bytes_retransmit=0 bytes_invalid=0 send_seq=1270 receive_seq=1270 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=22 upcoming_bytes=0 freq=12000342 adj=12000333 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.18 cputime=2.485 memavail=3834448 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 319.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000127 mcu_task_stddev=0.000000 bytes_write=205504 bytes_read=38224 bytes_retransmit=9 bytes_invalid=0 send_seq=4947 receive_seq=4947 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005258 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=32251 bytes_read=18761 bytes_retransmit=0 bytes_invalid=0 send_seq=1317 receive_seq=1317 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000342 adj=12000690 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.18 cputime=2.527 memavail=3835136 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 320.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000127 mcu_task_stddev=0.000000 bytes_write=213174 bytes_read=39397 bytes_retransmit=9 bytes_invalid=0 send_seq=5120 receive_seq=5120 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005223 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=33449 bytes_read=19302 bytes_retransmit=0 bytes_invalid=0 send_seq=1366 receive_seq=1366 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000342 adj=12000518 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.16 cputime=2.569 memavail=3835136 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.9 pwm=0.000
Stats 321.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000127 mcu_task_stddev=0.000000 bytes_write=220849 bytes_read=40590 bytes_retransmit=9 bytes_invalid=0 send_seq=5297 receive_seq=5297 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005181 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000102 bytes_write=34658 bytes_read=19843 bytes_retransmit=0 bytes_invalid=0 send_seq=1415 receive_seq=1415 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000342 adj=12000404 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.16 cputime=2.611 memavail=3835152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 322.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000123 mcu_task_stddev=0.000000 bytes_write=228512 bytes_read=41753 bytes_retransmit=9 bytes_invalid=0 send_seq=5470 receive_seq=5470 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=44 upcoming_bytes=0 freq=180005102 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=35821 bytes_read=20377 bytes_retransmit=0 bytes_invalid=0 send_seq=1455 receive_seq=1455 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=22 upcoming_bytes=0 freq=12000345 adj=12000322 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.16 cputime=2.653 memavail=3835152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 323.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000123 mcu_task_stddev=0.000000 bytes_write=235882 bytes_read=42876 bytes_retransmit=9 bytes_invalid=0 send_seq=5633 receive_seq=5633 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180006170 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=36992 bytes_read=20898 bytes_retransmit=0 bytes_invalid=0 send_seq=1500 receive_seq=1500 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000344 adj=12000295 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.16 cputime=2.695 memavail=3835120 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 324.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000123 mcu_task_stddev=0.000000 bytes_write=243556 bytes_read=44064 bytes_retransmit=9 bytes_invalid=0 send_seq=5809 receive_seq=5809 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005951 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=38191 bytes_read=21439 bytes_retransmit=0 bytes_invalid=0 send_seq=1549 receive_seq=1549 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000345 adj=11999683 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.16 cputime=2.738 memavail=3835120 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 325.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000123 mcu_task_stddev=0.000000 bytes_write=251220 bytes_read=45212 bytes_retransmit=9 bytes_invalid=0 send_seq=5980 receive_seq=5980 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005757 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=39422 bytes_read=22024 bytes_retransmit=0 bytes_invalid=0 send_seq=1599 receive_seq=1599 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000344 adj=11999862 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.15 cputime=2.782 memavail=3835120 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 326.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000123 mcu_task_stddev=0.000000 bytes_write=258909 bytes_read=46367 bytes_retransmit=9 bytes_invalid=0 send_seq=6152 receive_seq=6151 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005641 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=40641 bytes_read=22552 bytes_retransmit=0 bytes_invalid=0 send_seq=1648 receive_seq=1647 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000343 adj=11999976 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.15 cputime=2.826 memavail=3834448 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 327.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000132 mcu_task_stddev=0.000000 bytes_write=266234 bytes_read=47508 bytes_retransmit=9 bytes_invalid=0 send_seq=6315 receive_seq=6315 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005473 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=41791 bytes_read=23111 bytes_retransmit=0 bytes_invalid=0 send_seq=1695 receive_seq=1695 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000344 adj=12000033 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.5 pwm=0.000 sysload=0.15 cputime=2.869 memavail=3834448 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 328.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000132 mcu_task_stddev=0.000000 bytes_write=273883 bytes_read=48646 bytes_retransmit=9 bytes_invalid=0 send_seq=6484 receive_seq=6484 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005256 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=43006 bytes_read=23683 bytes_retransmit=0 bytes_invalid=0 send_seq=1744 receive_seq=1744 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000343 adj=12000112 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.15 cputime=2.912 memavail=3834448 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 329.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000132 mcu_task_stddev=0.000000 bytes_write=281550 bytes_read=49829 bytes_retransmit=9 bytes_invalid=0 send_seq=6659 receive_seq=6659 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180005112 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=44234 bytes_read=24224 bytes_retransmit=0 bytes_invalid=0 send_seq=1793 receive_seq=1793 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000343 adj=12000197 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.15 cputime=2.955 memavail=3834448 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 330.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000132 mcu_task_stddev=0.000000 bytes_write=289256 bytes_read=51029 bytes_retransmit=9 bytes_invalid=0 send_seq=6840 receive_seq=6839 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180004470 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=45427 bytes_read=24760 bytes_retransmit=0 bytes_invalid=0 send_seq=1841 receive_seq=1841 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000342 adj=12000222 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.14 cputime=3.000 memavail=3834448 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 331.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000132 mcu_task_stddev=0.000000 bytes_write=296631 bytes_read=52192 bytes_retransmit=9 bytes_invalid=0 send_seq=7013 receive_seq=7013 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180004099 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=46568 bytes_read=25299 bytes_retransmit=0 bytes_invalid=0 send_seq=1885 receive_seq=1885 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000342 adj=12000535 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.14 cputime=3.043 memavail=3833808 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 332.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=304279 bytes_read=53358 bytes_retransmit=9 bytes_invalid=0 send_seq=7182 receive_seq=7182 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180004018 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=47710 bytes_read=25773 bytes_retransmit=0 bytes_invalid=0 send_seq=1916 receive_seq=1916 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000341 adj=12000628 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.4 pwm=0.000 sysload=0.14 cputime=3.087 memavail=3833808 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 333.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=311912 bytes_read=54511 bytes_retransmit=9 bytes_invalid=0 send_seq=7351 receive_seq=7351 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003512 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=48858 bytes_read=26249 bytes_retransmit=0 bytes_invalid=0 send_seq=1952 receive_seq=1952 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000341 adj=12000532 EBB_NTC: temp=33.1  heater_bed: target=0 temp=38.3 pwm=0.000 sysload=0.14 cputime=3.131 memavail=3833136 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 334.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=319585 bytes_read=55660 bytes_retransmit=9 bytes_invalid=0 send_seq=7526 receive_seq=7525 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003527 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=50051 bytes_read=26816 bytes_retransmit=0 bytes_invalid=0 send_seq=2000 receive_seq=2000 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000341 adj=12000722 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.3 pwm=0.000 sysload=0.14 cputime=3.176 memavail=3833152 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 335.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=326980 bytes_read=56843 bytes_retransmit=9 bytes_invalid=0 send_seq=7701 receive_seq=7701 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003413 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=51217 bytes_read=27334 bytes_retransmit=0 bytes_invalid=0 send_seq=2046 receive_seq=2046 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000554 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.3 pwm=0.000 sysload=0.21 cputime=3.218 memavail=3832480 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 336.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000131 mcu_task_stddev=0.000000 bytes_write=334708 bytes_read=58097 bytes_retransmit=9 bytes_invalid=0 send_seq=7888 receive_seq=7888 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003238 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=52434 bytes_read=27870 bytes_retransmit=0 bytes_invalid=0 send_seq=2094 receive_seq=2094 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000507 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.3 pwm=0.000 sysload=0.21 cputime=3.262 memavail=3837632 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 337.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000124 mcu_task_stddev=0.000000 bytes_write=342379 bytes_read=59278 bytes_retransmit=9 bytes_invalid=0 send_seq=8063 receive_seq=8063 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003215 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000103 bytes_write=53617 bytes_read=28442 bytes_retransmit=0 bytes_invalid=0 send_seq=2140 receive_seq=2140 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000518 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.21 cputime=3.307 memavail=3837424 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 338.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000124 mcu_task_stddev=0.000000 bytes_write=350096 bytes_read=60488 bytes_retransmit=9 bytes_invalid=0 send_seq=8246 receive_seq=8245 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003147 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000103 bytes_write=54820 bytes_read=28973 bytes_retransmit=0 bytes_invalid=0 send_seq=2187 receive_seq=2187 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000439 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.21 cputime=3.353 memavail=3836336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 339.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000124 mcu_task_stddev=0.000000 bytes_write=357457 bytes_read=61646 bytes_retransmit=9 bytes_invalid=0 send_seq=8415 receive_seq=8415 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003153 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000103 bytes_write=55984 bytes_read=29481 bytes_retransmit=0 bytes_invalid=0 send_seq=2231 receive_seq=2231 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000405 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.21 cputime=3.396 memavail=3836336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 340.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000124 mcu_task_stddev=0.000000 bytes_write=365149 bytes_read=62834 bytes_retransmit=9 bytes_invalid=0 send_seq=8594 receive_seq=8594 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003165 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000103 bytes_write=57186 bytes_read=30053 bytes_retransmit=0 bytes_invalid=0 send_seq=2280 receive_seq=2280 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000341 adj=12000328 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.19 cputime=3.441 memavail=3835424 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 341.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000124 mcu_task_stddev=0.000000 bytes_write=372783 bytes_read=63982 bytes_retransmit=9 bytes_invalid=0 send_seq=8762 receive_seq=8762 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003231 EBBCan: mcu_awake=0.054 mcu_task_avg=0.000035 mcu_task_stddev=0.000103 bytes_write=58379 bytes_read=30584 bytes_retransmit=0 bytes_invalid=0 send_seq=2327 receive_seq=2327 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000341 adj=12000278 EBB_NTC: temp=32.9  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.19 cputime=3.485 memavail=3834992 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 342.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=380406 bytes_read=65155 bytes_retransmit=9 bytes_invalid=0 send_seq=8934 receive_seq=8934 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=44 upcoming_bytes=0 freq=180003239 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=59590 bytes_read=31117 bytes_retransmit=0 bytes_invalid=0 send_seq=2373 receive_seq=2373 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=2 upcoming_bytes=0 freq=12000341 adj=12000197 EBB_NTC: temp=33.2  heater_bed: target=0 temp=38.3 pwm=0.000 sysload=0.19 cputime=3.529 memavail=3834336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 343.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=387825 bytes_read=66323 bytes_retransmit=9 bytes_invalid=0 send_seq=9109 receive_seq=9109 retransmit_seq=2 srtt=0.002 rttvar=0.002 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003233 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=60757 bytes_read=31679 bytes_retransmit=0 bytes_invalid=0 send_seq=2420 receive_seq=2420 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000177 EBB_NTC: temp=32.9  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.19 cputime=3.569 memavail=3834336 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 344.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=395535 bytes_read=67536 bytes_retransmit=9 bytes_invalid=0 send_seq=9290 receive_seq=9290 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003266 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=61940 bytes_read=32205 bytes_retransmit=0 bytes_invalid=0 send_seq=2466 receive_seq=2466 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000164 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.19 cputime=3.611 memavail=3833920 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 345.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=403212 bytes_read=68724 bytes_retransmit=9 bytes_invalid=0 send_seq=9466 receive_seq=9466 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=180003268 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=63149 bytes_read=32736 bytes_retransmit=0 bytes_invalid=0 send_seq=2513 receive_seq=2513 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=12000340 adj=12000126 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.3 pwm=0.000 sysload=0.18 cputime=3.654 memavail=3833920 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Stats 346.5: gcodein=0  mcu: mcu_awake=0.299 mcu_task_avg=0.000125 mcu_task_stddev=0.000000 bytes_write=410844 bytes_read=69874 bytes_retransmit=9 bytes_invalid=0 send_seq=9639 receive_seq=9639 retransmit_seq=2 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=23 upcoming_bytes=0 freq=180003259 EBBCan: mcu_awake=0.055 mcu_task_avg=0.000034 mcu_task_stddev=0.000101 bytes_write=64345 bytes_read=33295 bytes_retransmit=0 bytes_invalid=0 send_seq=2561 receive_seq=2561 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=23 upcoming_bytes=0 freq=12000340 adj=12000122 EBB_NTC: temp=33.0  heater_bed: target=0 temp=38.2 pwm=0.000 sysload=0.18 cputime=3.697 memavail=3833920 print_time=0.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=32.8 pwm=0.000
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-I', '/home/pi/printer_data/comms/klippy.serial', '-l', '/home/pi/printer_data/logs/klippy.log', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-261-g248d3dbf-dirty'
Untracked files: klippy/extras/led_effect.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ?
Python: '3.11.2 (main, May  2 2024, 11:59:08) [GCC 12.2.0]'
Start printer at Wed Jul 10 11:25:01 2024 (1720607101.6 12.3)
===== Config file =====
[gcode_macro PARK]
gcode = 
	status_busy
	{% set th = printer.toolhead %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro CG28]
gcode = 
	status_homing
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro CQGL]
gcode = 
	{% if printer.quad_gantry_level.applied == False %}
	status_calibrating_z
	{% if "xyz" not in printer.toolhead.homed_axes %}
	status_homing
	G28
	{% endif %}
	QUAD_GANTRY_LEVEL
	{% endif %}

[gcode_macro G32]
gcode = 
	SAVE_GCODE_STATE NAME=STATE_G32
	G90
	CG28
	CQGL
	G28 Z
	status_meshing
	BED_MESH_CALIBRATE ADAPTIVE=1
	PARK
	RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
gcode = 
	{% set target_bed = params.BED|int %}
	{% set target_extruder = params.EXTRUDER|int %}
	{% set target_chamber = params.CHAMBER|default("35")|int %}
	SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={target_chamber}
	status_heating
	M190 S{target_bed}
	M109 S{target_extruder}
	G32
	G90
	G1 Z20 F3000
	status_printing
	LINE_PURGE
	SFS_ENABLE

[gcode_macro PRINT_END]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G1 E-5.0 F1800
	
	TURN_OFF_HEATERS
	
	SFS_DISABLE
	
	G90
	G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
	G0 X{2 * th.axis_maximum.x//3} Y{th.axis_maximum.y - 2} F3600
	M107
	
	BED_MESH_CLEAR
	status_part_ready
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}
description = Pause the actual running print

[gcode_macro RESUME]
rename_existing = RESUME_BASE
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}
description = Resume the actual running print
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False

[gcode_macro CANCEL_PRINT]
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE
description = Cancel the actual running print

[gcode_macro M600]
gcode = 
	
	PAUSE

[mcu EBBCan]
canbus_uuid = 5f35f76b28ae

[temperature_sensor EBB_NTC]
sensor_type = Generic 3950
sensor_pin = EBBCan:gpio28

[adxl345]
cs_pin = EBBCan:gpio1
spi_software_sclk_pin = EBBCan:gpio2
spi_software_mosi_pin = EBBCan:gpio0
spi_software_miso_pin = EBBCan:gpio3
axes_map = z,-y,x

[resonance_tester]
probe_points = 100, 100, 20
accel_chip = adxl345

[extruder]
step_pin = EBBCan:gpio18
dir_pin = EBBCan:gpio19
enable_pin = !EBBCan:gpio17
microsteps = 32
rotation_distance = 21.9985825
gear_ratio = 50:10
full_steps_per_rotation = 200
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = EBBCan:gpio7
control = pid
pid_kp = 26.385
pid_ki = 3.383
pid_kd = 51.450
min_temp = -100
max_temp = 285
max_extrude_cross_section = 5
sensor_type = MAX31865
sensor_pin = EBBCan:gpio9
spi_software_sclk_pin = EBBCan:gpio10
spi_software_mosi_pin = EBBCan:gpio8
spi_software_miso_pin = EBBCan:gpio11
rtd_nominal_r = 1000
rtd_reference_r = 4300
rtd_num_of_wires = 2
rtd_use_50hz_filter = True

[tmc2209 extruder]
uart_pin = EBBCan:gpio20
run_current = 0.3
stealthchop_threshold = 999999

[fan]
pin = EBBCan:gpio13

[heater_fan hotend_fan]
pin = EBBCan:gpio14
heater = extruder
heater_temp = 50.0

[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[neopixel UnderLighting]
pin = PB0
chain_count = 75
initial_red = 1.0
initial_green = 0.0
initial_blue = 0.0
color_order = GRB

[neopixel sb_leds]
pin = EBBCan:gpio16
chain_count = 10
color_order = GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW,  GRBW
initial_red = 1.0
initial_green = 0.0
initial_blue = 1.0
initial_white = 0.0

[led_effect sb_logo_busy]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1,0,0)

[led_effect sb_logo_cleaning]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.02, 0.5)

[led_effect sb_logo_calibrating_z]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.0, 0.35)

[led_effect sb_logo_heating]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (1, 0.18, 0)

[led_effect sb_logo_cooling]
leds = 
	neopixel:sb_leds (1,3,7,8,6,2)
	neopixel:UnderLighting
autostart = false
frame_rate = 24
layers = 
	comet  0.3  0 add (0, 0, 1)

[led_effect sb_logo_homing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 0.6, 0.2)

[led_effect sb_logo_leveling]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.5, 0.1, 0.4)

[led_effect sb_logo_meshing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.2, 1.0, 0.0)

[led_effect sb_logo_printing]
autostart = false
frame_rate = 12
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.3, 0.3, 0.0),(0.3, 0.1, 0.0)

[led_effect sb_logo_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.01, 0.01, 0.01)

[led_effect sb_logo_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (1-8)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (0.0, 1.0, 0.0)

[led_effect sb_nozzle_heating]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
	neopixel:UnderLighting
layers = 
	breathing  3 1 top (1.0, 0.18, 0.0, 0.0)

[led_effect sb_nozzle_cooling]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.0, 0.0, 1.0, 0.1)

[led_effect sb_nozzle_standby]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 0.0, 0.0, 0.0)

[led_effect sb_nozzle_part_ready]
autostart = false
frame_rate = 24
leds = 
	neopixel:sb_leds (9,10)
layers = 
	breathing  3 1 top (0.6, 1.0, 0.0, 0.1)

[led_effect sb_critical_error]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
layers = 
	strobe         1  1.5   add        (1.0,  1.0, 1.0)
	breathing      2  0     difference (0.95, 0.0, 0.0)
	static         1  0     top        (1.0,  0.0, 0.0)
autostart = false
frame_rate = 24
run_on_error = true

[led_effect rainbow]
leds = 
	neopixel:sb_leds
	neopixel:UnderLighting
autostart = true
frame_rate = 24
layers = 
	gradient  0.3  1 add (0.3, 0.0, 0.0),(0.0, 0.3, 0.0),(0.0, 0.0, 0.3)

[led_effect set_nozzle_leds]
leds = 
	neopixel:sb_leds (9,10)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (0.0,  0.0, 0.0, 1.0)

[led_effect set_logo_leds]
leds = 
	neopixel:sb_leds (1,2,3,4,5,6,7,8)
autostart = false
frame_rate = 24
layers = 
	static         0  0     top        (1.0,  1.0, 1.0)

[gcode_macro set_logo_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds STOP=1

[gcode_macro set_logo_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_logo_leds

[gcode_macro set_nozzle_leds_on]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds

[gcode_macro set_nozzle_leds_off]
gcode = 
	SET_LED_EFFECT EFFECT=set_nozzle_leds STOP=1

[gcode_macro status_off]
gcode = 
	STOP_LED_EFFECTS

[gcode_macro status_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=rainbow

[gcode_macro status_part_ready]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_nozzle_part_ready
	SET_LED_EFFECT EFFECT=sb_logo_part_ready

[gcode_macro status_busy]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_busy
	set_nozzle_leds_on

[gcode_macro status_heating]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_heating
	SET_LED_EFFECT EFFECT=sb_nozzle_heating

[gcode_macro status_cooling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cooling
	SET_LED_EFFECT EFFECT=sb_nozzle_cooling

[gcode_macro status_leveling]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_leveling
	set_nozzle_leds_on

[gcode_macro status_homing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_homing
	set_nozzle_leds_on

[gcode_macro status_changeFilament]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_critical_error
	set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_cleaning
	set_nozzle_leds_on

[gcode_macro status_meshing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_meshing
	set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_calibrating_z
	set_nozzle_leds_on

[gcode_macro status_printing]
gcode = 
	STOP_LED_EFFECTS
	SET_LED_EFFECT EFFECT=sb_logo_printing
	set_nozzle_leds_on

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.4
variable_purge_amount = 40
variable_line_length = 75
variable_flow_rate = 12
variable_x_default = 10
variable_y_default = 10
variable_distance_to_object_y = 5
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
	{ action_respond_info("z_height        : %f" % (z_height))  }
	{ action_respond_info("purge_amount    : %f" % (purge_amount))  }
	{ action_respond_info("line_length     : %f" % (line_length))  }
	{ action_respond_info("flow_rate       : %f" % (flow_rate))  }
	{ action_respond_info("x_default       : %f" % (x_default))  }
	{ action_respond_info("y_default       : %f" % (y_default))  }
	{ action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
	{% endif %}
	
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
	{% set cross_section = nozzle_dia * z_height | float %}
	{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{x_origin} Y{y_origin - distance_to_object_y}
	G0 Z{z_height}
	M83
	G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}
	G1 E-.5 F2100
	G92 E0
	M82
	G0 Z{z_height * 2} F{travel_speed}

[gcode_macro SETUP_LINE_PURGE]
gcode = 
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

[exclude_object]

[gcode_arcs]
resolution = 0.1

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32f446xx_53005B000251313133353932-if00

[printer]
kinematics = corexy
max_velocity = 800
max_accel = 4000
max_accel_to_decel = 4000
max_z_velocity = 20
max_z_accel = 350
square_corner_velocity = 5.0

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 50.0
shaper_type_y = mzv
shaper_freq_y = 37.8

[heater_bed]
heater_pin = PA3
sensor_type = Generic 3950
sensor_pin = PF3
max_power = 0.75
min_temp = -200
max_temp = 120
control = pid
pid_kp = 44.597
pid_ki = 2.065
pid_kd = 240.826

[stepper_x]
step_pin = PF13
dir_pin = PF12
enable_pin = !PF14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG6
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PG0
dir_pin = PG1
enable_pin = !PF15
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = PG9
position_min = 0
position_endstop = 350
position_max = 350
homing_speed = 25
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PD11
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PF11
dir_pin = PG3
enable_pin = !PG5
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32
endstop_pin = PG10
position_max = 310
position_min = -5
homing_speed = 8
second_homing_speed = 3
homing_retract_dist = 3
position_endstop = 1.456

[tmc2209 stepper_z]
uart_pin = PC6
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z1]
step_pin = PG4
dir_pin = !PC1
enable_pin = !PA0
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PC7
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z2]
step_pin = PF9
dir_pin = PF10
enable_pin = !PG2
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PF2
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z3]
step_pin = PC13
dir_pin = !PF0
enable_pin = !PF1
rotation_distance = 40
gear_ratio = 80:16
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PE4
interpolate = false
run_current = 0.8
sense_resistor = 0.110
stealthchop_threshold = 0

[idle_timeout]
timeout = 1800

[safe_z_home]
home_xy_position = 122,350
speed = 500
z_hop = 10

[quad_gantry_level]
gantry_corners = 
	-60,-10
	410,420
points = 
	50,25
	50,275
	300,275
	300,25
speed = 500
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.0075
max_adjust = 10

[probe]
pin = EBBCan:gpio6
x_offset = 0
y_offset = 25.0
z_offset = 0
speed = 7.5
samples = 3
samples_result = median
sample_retract_dist = 3.0
samples_tolerance = 0.01
samples_tolerance_retries = 5

[temperature_fan chamber]
pin = PD12
max_power = 0.65
shutdown_speed = 0.0
kick_start_time = 5.0
cycle_time = 0.01
off_below = 0.1
sensor_type = ATC Semitec 104GT-2
sensor_pin = PF4
min_temp = 0
max_temp = 70
target_temp = 35.0
control = watermark
gcode_id = C

[controller_fan controller_fan_0]
pin = PD13
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[controller_fan controller_fan_1]
pin = PD14
kick_start_time = 0.5
idle_timeout = 120
fan_speed = 0.6

[filament_motion_sensor SFS_T0]
detection_length = 14.00
extruder = extruder
switch_pin = ^PG12
pause_on_runout = True
event_delay = 3.0
pause_delay = 0.5
runout_gcode = 
	M117 Runout Detected!

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[gcode_macro SFS_ENABLE]
description = Enable smart filament sensor
gcode = 
	M117 ENABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1

[gcode_macro SFS_DISABLE]
description = Disable smart filament sensor
gcode = 
	M117 DISABLING the Smart Filament Sensor
	G92 E0
	SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0

[output_pin caselight]
pin = PB10
pwm = true
shutdown_value = 0
value = 1
cycle_time = 0.01

[bed_mesh]
speed = 300
horizontal_move_z = 10
mesh_min = 40, 40
mesh_max = 310,310
fade_start = 0.6
fade_end = 10.0
probe_count = 7,7
adaptive_margin = 5
algorithm = bicubic
zero_reference_position = 175,175

[board_pins]
aliases = 
	
	EXP1_1=PE8, EXP1_2=PE7,
	EXP1_3=PE9, EXP1_4=PE10,
	EXP1_5=PE12, EXP1_6=PE13,
	EXP1_7=PE14, EXP1_8=PE15,
	EXP1_9=<GND>, EXP1_10=<5V>,
	
	
	EXP2_1=PA6, EXP2_2=PA5,
	EXP2_3=PB1, EXP2_4=PA4,
	EXP2_5=PB2, EXP2_6=PA7,
	EXP2_7=PC15, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=<5V>

[display]
lcd_type = uc1701
cs_pin = EXP1_3
a0_pin = EXP1_4
rst_pin = EXP1_5
encoder_pins = ^EXP2_5, ^EXP2_3
click_pin = ^!EXP1_2
contrast = 63
spi_software_miso_pin = EXP2_1
spi_software_mosi_pin = EXP2_6
spi_software_sclk_pin = EXP2_2

[neopixel btt_mini12864]
pin = EXP1_6
chain_count = 3
initial_red = 0.0
initial_green = 0.0
initial_blue = 1.0
color_order = RGB

[bed_mesh default]
version = 1
points = 
	-0.027500, -0.022500, -0.021250, -0.025000
	-0.013750, -0.005000, -0.002500, -0.022500
	-0.008750, 0.013750, 0.023750, -0.011250
	-0.008750, -0.005000, -0.007500, -0.015000
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 112.02
max_x = 237.97
min_y = 112.84
max_y = 237.16
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': got {'oid': 24, 'next_clock': 2176494336, 'value': 30418, '#name': 'analog_in_state', '#sent_time': 13.104446048, '#receive_time': 13.136086529}
mcu 'mcu': got {'oid': 27, 'next_clock': 2181894336, 'value': 30859, '#name': 'analog_in_state', '#sent_time': 13.155354844, '#receive_time': 13.165997733}
webhooks client 140734158839184: New connection
Loaded MCU 'mcu' 118 commands (v0.12.0-99-g5e3daa6f / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_i2c3=PA8,PC9 BUS_PINS_sdio=PC12,PD2,PC8,PC9,PC10,PC11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 BUS_PINS_spi3a=PC11,PC12,PC10 BUS_PINS_spi4=PE13,PE14,PE12 CLOCK_FREQ=180000000 MCU=stm32f446xx PWM_MAX=255 RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PH0,PH1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'mcu': got {'oid': 24, 'next_clock': 2230494336, 'value': 30417, '#name': 'analog_in_state', '#sent_time': 13.410384658, '#receive_time': 13.43604351}
mcu 'mcu': got {'oid': 27, 'next_clock': 2235894336, 'value': 30859, '#name': 'analog_in_state', '#sent_time': 13.410384658, '#receive_time': 13.467167695}
mcu 'EBBCan': Starting CAN connect
Created a socket
webhooks client 140734158839184: Client info {'program': 'Moonraker', 'version': 'v0.8.0-384-g8f3b30a'}
mcu 'mcu': got {'oid': 24, 'next_clock': 2284494336, 'value': 30418, '#name': 'analog_in_state', '#sent_time': 13.558281066, '#receive_time': 13.736119677}
mcu 'mcu': got {'oid': 27, 'next_clock': 2289894336, 'value': 30861, '#name': 'analog_in_state', '#sent_time': 13.558281066, '#receive_time': 13.76605464}
mcu 'EBBCan': got {'oid': 9, 'next_clock': 3866318823, 'value': 30741, '#name': 'analog_in_state', '#sent_time': 13.853257343, '#receive_time': 13.878972584000001}
mcu 'mcu': got {'oid': 24, 'next_clock': 2338494336, 'value': 30420, '#name': 'analog_in_state', '#sent_time': 13.558281066, '#receive_time': 14.036126195}
mcu 'mcu': got {'oid': 27, 'next_clock': 2343894336, 'value': 30860, '#name': 'analog_in_state', '#sent_time': 13.558281066, '#receive_time': 14.066041954}
Loaded MCU 'EBBCan' 115 commands (v0.12.0-261-g248d3dbf / gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40)
MCU 'EBBCan' config: ADC_MAX=4095 BUS_PINS_i2c0a=gpio0,gpio1 BUS_PINS_i2c0b=gpio4,gpio5 BUS_PINS_i2c0c=gpio8,gpio9 BUS_PINS_i2c0d=gpio12,gpio13 BUS_PINS_i2c0e=gpio16,gpio17 BUS_PINS_i2c0f=gpio20,gpio21 BUS_PINS_i2c0g=gpio24,gpio25 BUS_PINS_i2c0h=gpio28,gpio29 BUS_PINS_i2c1a=gpio2,gpio3 BUS_PINS_i2c1b=gpio6,gpio7 BUS_PINS_i2c1c=gpio10,gpio11 BUS_PINS_i2c1d=gpio14,gpio15 BUS_PINS_i2c1e=gpio18,gpio19 BUS_PINS_i2c1f=gpio22,gpio23 BUS_PINS_i2c1g=gpio26,gpio27 BUS_PINS_spi0a=gpio0,gpio3,gpio2 BUS_PINS_spi0b=gpio4,gpio7,gpio6 BUS_PINS_spi0c=gpio16,gpio19,gpio18 BUS_PINS_spi0d=gpio20,gpio23,gpio22 BUS_PINS_spi1a=gpio8,gpio11,gpio10 BUS_PINS_spi1b=gpio12,gpio15,gpio14 BUS_PINS_spi1c=gpio24,gpio27,gpio26 CANBUS_FREQUENCY=1000000 CLOCK_FREQ=12000000 MCU=rp2040 PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=gpio4,gpio5 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Configured MCU 'EBBCan' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (40.0, 15.0)    | (40.0, 40.0)
  1   | (85.0, 15.0)    | (85.0, 40.0)
  2   | (130.0, 15.0)   | (130.0, 40.0)
  3   | (175.0, 15.0)   | (175.0, 40.0)
  4   | (220.0, 15.0)   | (220.0, 40.0)
  5   | (265.0, 15.0)   | (265.0, 40.0)
  6   | (310.0, 15.0)   | (310.0, 40.0)
  7   | (310.0, 60.0)   | (310.0, 85.0)
  8   | (265.0, 60.0)   | (265.0, 85.0)
  9   | (220.0, 60.0)   | (220.0, 85.0)
  10  | (175.0, 60.0)   | (175.0, 85.0)
  11  | (130.0, 60.0)   | (130.0, 85.0)
  12  | (85.0, 60.0)    | (85.0, 85.0)
  13  | (40.0, 60.0)    | (40.0, 85.0)
  14  | (40.0, 105.0)   | (40.0, 130.0)
  15  | (85.0, 105.0)   | (85.0, 130.0)
  16  | (130.0, 105.0)  | (130.0, 130.0)
  17  | (175.0, 105.0)  | (175.0, 130.0)
  18  | (220.0, 105.0)  | (220.0, 130.0)
  19  | (265.0, 105.0)  | (265.0, 130.0)
  20  | (310.0, 105.0)  | (310.0, 130.0)
  21  | (310.0, 150.0)  | (310.0, 175.0)
  22  | (265.0, 150.0)  | (265.0, 175.0)
  23  | (220.0, 150.0)  | (220.0, 175.0)
  24  | (175.0, 150.0)  | (175.0, 175.0)
  25  | (130.0, 150.0)  | (130.0, 175.0)
  26  | (85.0, 150.0)   | (85.0, 175.0)
  27  | (40.0, 150.0)   | (40.0, 175.0)
  28  | (40.0, 195.0)   | (40.0, 220.0)
  29  | (85.0, 195.0)   | (85.0, 220.0)
  30  | (130.0, 195.0)  | (130.0, 220.0)
  31  | (175.0, 195.0)  | (175.0, 220.0)
  32  | (220.0, 195.0)  | (220.0, 220.0)
  33  | (265.0, 195.0)  | (265.0, 220.0)
  34  | (310.0, 195.0)  | (310.0, 220.0)
  35  | (310.0, 240.0)  | (310.0, 265.0)
  36  | (265.0, 240.0)  | (265.0, 265.0)
  37  | (220.0, 240.0)  | (220.0, 265.0)
  38  | (175.0, 240.0)  | (175.0, 265.0)
  39  | (130.0, 240.0)  | (130.0, 265.0)
  40  | (85.0, 240.0)   | (85.0, 265.0)
  41  | (40.0, 240.0)   | (40.0, 265.0)
  42  | (40.0, 285.0)   | (40.0, 310.0)
  43  | (85.0, 285.0)   | (85.0, 310.0)
  44  | (130.0, 285.0)  | (130.0, 310.0)
  45  | (175.0, 285.0)  | (175.0, 310.0)
  46  | (220.0, 285.0)  | (220.0, 310.0)
  47  | (265.0, 285.0)  | (265.0, 310.0)
  48  | (310.0, 285.0)  | (310.0, 310.0)
bed_mesh: zero_reference_position is (175.00, 175.00)
Starting heater checks for extruder
webhooks: registering remote method 'shutdown_machine' for connection id: 140734158839184
webhooks: registering remote method 'reboot_machine' for connection id: 140734158839184
webhooks: registering remote method 'pause_job_queue' for connection id: 140734158839184
webhooks: registering remote method 'start_job_queue' for connection id: 140734158839184
Resetting prediction variance 296.040: freq=180002037 diff=-138572 stddev=25911.140
